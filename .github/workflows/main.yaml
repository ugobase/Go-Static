name: Static Go CI/CD

on:
    push:
        branches:
            - main
        paths-ignore:
            - 'docs/**'
            - 'README.md'
            - 'helm/**'

jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./static-go

        steps:
            - name: Checkout code
              uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
            
            - name: List files
              run: ls -la
            
            - name: Run Git Leaks
              uses: zricethezav/gitleaks-action@v2
              with:
                args: "--verbose --redact --exit-code 1"

            
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.21'

            - name: Cache Go modules
              uses: actions/cache@v3
              with: 
                path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: go mod download

            - name: Run tests
              run: go test ./... -v

            - name: Build the application
              run: go build -o my-app .

    code-quality:
        runs-on: ubuntu-latest
        needs: build
        defaults:
          run:
            working-directory: ./static-go


        steps:
            - name: Checkout code
              uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.21'


            - name: Install golangci-lint
              run: |
                curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
                | sh -s -- -b $HOME/go/bin v1.64.7

            - name: Add golangci-lint to PATH
              run: echo "$HOME/go/bin" >> $GITHUB_PATH

            - name: Run golangci-lint
              run: golangci-lint run ./...
              working-directory: ./static-go

    docker-build-and-push:
        runs-on: ubuntu-latest
        needs: [build, code-quality]
        defaults:
          run:
            working-directory: ./static-go
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout code
              uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata from Static-go
              id: static-go
              uses: docker/metadata-action@v5
              with:
                images: ${{ vars.DOCKER_USERNAME }}/go-web
                tags: ${{ github.sha }}-${{ github.run_id }}

            - name: Trivy scan source code from Static-go
              uses: aquasecurity/trivy-action@0.28.0
              with:
                scan-type: fs
                directory: ./static-go
                severity: CRITICAL,HIGH

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                context: ./static-go
                file: ./static-go/Dockerfile
                push: true
                tags: ${{ steps.static-go.outputs.tags }}

            - name: Trivy scan image from Static-go
              uses: aquasecurity/trivy-action@0.28.0
              with:
                scan-type: image
                image-ref: ${{ steps.static-go.outputs.tags }}
                format: table
                severity: CRITICAL,HIGH
                exit-code: '0'
                ignore-unfixed: true
                vuln-type: os,library
                output: trivy-report.txt
                output-format: 'table'  

            - name: Upload Trivy report as artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-report  
                path: trivy-report.txt

    using-helm:
        runs-on: ubuntu-latest
        needs: [docker-build-and-push]
        defaults:
          run:
            working-directory: ./static-go
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Checkout code
              uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
              with:
                token: ${{ secrets.TOKEN }}

            - name: Helm Update
              run: |
                sed -i "s/tag: .*/tag: ${{ github.sha }}-${{ github.run_id }}/" ../helm/go-chart/values.yaml

            - name: Commit and Push changes
              run: |
                git config --global user.name "${{ github.actor }}"
                git config --global user.email "${{ github.actor }}@users.noreply.github.com"
                git add ../helm/go-chart/values.yaml
                git commit -m "Update image tag to ${{ github.sha }}-${{ github.run_id }}" || echo "No Changes to Commit"
                git push origin main

            